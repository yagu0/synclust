% Generated by roxygen2 (4.0.2): do not edit by hand
\name{findSyncVarRegions}
\alias{findSyncVarRegions}
\title{Direct clustering from a neighborhoods graph, or get regions from (Poisson)
distribution parameters optimization, using convex relaxation.}
\usage{
findSyncVarRegions(method, M, k, alpha, gmode, K, dtype, cmeth, pcoef = 1,
  h = 0.001, eps = 0.001, maxit = 1000, showLL = TRUE, disp = TRUE)
}
\arguments{
\item{method}{Global method: "direct" or "convex"}

\item{M}{Matrix of observations in rows, the two last columns
corresponding to geographic coordinates;
set to NULL to use our initial dataset (625 rows / 9 years)}

\item{k}{Number of neighbors}

\item{alpha}{Weight parameter for intra-neighborhoods distance computations;
0 = take only geographic coordinates into account;
1 = take only observations over the years into account;
in-between : several levels of compromise;
-1 or any negative value : use a heuristic to choose alpha.}

\item{gmode}{Neighborhood type. 0 = reduced [mutual] kNN; 1 = augmented kNN (symmetric);
2 = normal kNN; 3 = one NN in each quadrant; (NON-symmetric).
NOTE: gmode==3 automatically sets k==4 (at most!)}

\item{K}{Number of clusters}

\item{dtype}{Distance type, in {"simple","spath","ectd"}.
NOTE: better avoid "simple" if gmode>=2}

\item{cmeth}{Clustering method, in {"KM","HC","spec"} for k-means (distances based)
or hierarchical clustering, or spectral clustering (only if gmode>=2)}

\item{pcoef}{Penalty value for convex optimization [default: 1.0]}

\item{h}{Step in the min LL algorithm [default: 1e-3]}

\item{eps}{Threshold to stop min.LL iterations [default: 1e-3]}

\item{maxit}{Maximum number of iterations in the min LL algo [default: 1e3]}

\item{showLL}{Print trace of log-likelihood evolution [default: true]}

\item{disp}{True [default] for interactive display (otherwise nothing gets plotted)}
}
\value{
list with the following entries. M: data matrix in input; NI: computed neighborhoods;
        dists: computed distances matrix; clusts: partition into K clusters, as an integer vector;
        cxpar: parameters obtained after convex optimization (if applicable)
}
\description{
Direct clustering from a neighborhoods graph, or get regions from (Poisson)
distribution parameters optimization, using convex relaxation.
}
\examples{
cvr = findSyncVarRegions("convex",M=NULL,k=10,alpha=0.1,gmode=1,K=5,dtype="spath",cmeth="HC")
drawMapWithSitez(cvr$M, cvr$clusters)
drawNeighboroodGraph(cvr$M, cvr$NI)
}

